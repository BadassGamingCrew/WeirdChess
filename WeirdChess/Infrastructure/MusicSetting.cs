// <auto-generated />
namespace WeirdChess.Infrastructure
{
    using Enums;
    using Utilities;
    /// <summary>
    /// Concrete class for MusicSetting ISetting objects
    /// </summary>
    public class MusicSetting : Setting
    {
        private static readonly SettingType SettingType = SettingType.Music;
        private static readonly MusicOptions DefaultValue = AllowedSettings.MusicOptionValues[0];
        private static readonly string ValueErrorMessage = Messages.InvalidMusicOption;
        /// <summary>
        /// Default constructor with no parameters.
        /// Creates an object using the DefaultValue constant.
        /// </summary>
        public MusicSetting()
            : this(default(MusicOptions))
        {
            // TODO: Remove null values from constructor to implement
        }
        /// <summary>
        /// Constructor which takes a value parameter.
        /// </summary>
        /// <param name="value">The value for the MusicSetting object.</param>
        public MusicSetting(MusicOptions value)
            : base(default(SettingType), null, null, null)
        {
            // TODO: Remove null values from constructor to implement
        }
    }
}
